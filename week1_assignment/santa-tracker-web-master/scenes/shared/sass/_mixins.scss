
// Modifed from https://github.com/pierreburel/media-hdpi
// Default pixel ratio
$pixel-ratio-hdpi: 1.5 !default;

// Media query block
@mixin media-hdpi($pixel-ratio: $pixel-ratio-hdpi) {
  // DPI to pixel ratio
  @if unit($pixel-ratio) == "dpi" {
    $pixel-ratio: $pixel-ratio/96dpi;
  }

  // Default media query
  // TODO(samthor): Is the -webkit- prefix still needed?
  // http://www.brettjankord.com/2012/11/28/cross-browser-retinahigh-resolution-media-queries/
  $media-hdpi: "(-webkit-min-device-pixel-ratio: #{$pixel-ratio}), (min-resolution: #{$pixel-ratio*96}dpi)" !default;

  @media #{$media-hdpi} {
    @content;
  }
}

// Strips a px/%/etc from a value.
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Returns the % of $value in $inside. Assumes both are px values.
@function percent($value, $inside) {
  @return #{(strip-unit($value) / strip-unit($inside)) * 100%};
  // From "Operators", http://sass-lang.com/guide#topic-8.
  // @return $value / $inside * 100%;
}

// Force a layer. Overwrites any previous transform/will-change statements.
@mixin will-change($reasons...) {
  transform: translateZ(0);
  @if $reasons { will-change: $reasons; }
  @else { will-change: transform; }
}
